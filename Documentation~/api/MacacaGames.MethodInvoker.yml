### YamlMime:ManagedReference
items:
- uid: MacacaGames.MethodInvoker
  commentId: T:MacacaGames.MethodInvoker
  id: MethodInvoker
  parent: MacacaGames
  children:
  - MacacaGames.MethodInvoker.#ctor(System.Reflection.MethodInfo)
  - MacacaGames.MethodInvoker.Invoke(System.Object,System.Object[])
  - MacacaGames.MethodInvoker.MacacaGames#IMethodInvoker#Invoke(System.Object,System.Object[])
  - MacacaGames.MethodInvoker.MethodInfo
  langs:
  - csharp
  - vb
  name: MethodInvoker
  nameWithType: MethodInvoker
  fullName: MacacaGames.MethodInvoker
  type: Class
  source:
    remote:
      path: Scripts/Utilitys/Reflactor/MethodInvoker.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: MethodInvoker
    path: ../Scripts/Utilitys/Reflactor/MethodInvoker.cs
    startLine: 14
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: 'public class MethodInvoker : IMethodInvoker'
    content.vb: >-
      Public Class MethodInvoker
          Implements IMethodInvoker
  inheritance:
  - System.Object
  implements:
  - MacacaGames.IMethodInvoker
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MacacaGames.MethodInvoker.MethodInfo
  commentId: P:MacacaGames.MethodInvoker.MethodInfo
  id: MethodInfo
  parent: MacacaGames.MethodInvoker
  langs:
  - csharp
  - vb
  name: MethodInfo
  nameWithType: MethodInvoker.MethodInfo
  fullName: MacacaGames.MethodInvoker.MethodInfo
  type: Property
  source:
    remote:
      path: Scripts/Utilitys/Reflactor/MethodInvoker.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: MethodInfo
    path: ../Scripts/Utilitys/Reflactor/MethodInvoker.cs
    startLine: 18
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public MethodInfo MethodInfo { get; }
    parameters: []
    return:
      type: System.Reflection.MethodInfo
    content.vb: Public ReadOnly Property MethodInfo As MethodInfo
  overload: MacacaGames.MethodInvoker.MethodInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: MacacaGames.MethodInvoker.#ctor(System.Reflection.MethodInfo)
  commentId: M:MacacaGames.MethodInvoker.#ctor(System.Reflection.MethodInfo)
  id: '#ctor(System.Reflection.MethodInfo)'
  parent: MacacaGames.MethodInvoker
  langs:
  - csharp
  - vb
  name: MethodInvoker(MethodInfo)
  nameWithType: MethodInvoker.MethodInvoker(MethodInfo)
  fullName: MacacaGames.MethodInvoker.MethodInvoker(System.Reflection.MethodInfo)
  type: Constructor
  source:
    remote:
      path: Scripts/Utilitys/Reflactor/MethodInvoker.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: .ctor
    path: ../Scripts/Utilitys/Reflactor/MethodInvoker.cs
    startLine: 20
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public MethodInvoker(MethodInfo methodInfo)
    parameters:
    - id: methodInfo
      type: System.Reflection.MethodInfo
    content.vb: Public Sub New(methodInfo As MethodInfo)
  overload: MacacaGames.MethodInvoker.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.MethodInvoker.Invoke(System.Object,System.Object[])
  commentId: M:MacacaGames.MethodInvoker.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: MacacaGames.MethodInvoker
  langs:
  - csharp
  - vb
  name: Invoke(Object, Object[])
  nameWithType: MethodInvoker.Invoke(Object, Object[])
  fullName: MacacaGames.MethodInvoker.Invoke(System.Object, System.Object[])
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Reflactor/MethodInvoker.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: Invoke
    path: ../Scripts/Utilitys/Reflactor/MethodInvoker.cs
    startLine: 26
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public object Invoke(object instance, params object[] parameters)
    parameters:
    - id: instance
      type: System.Object
    - id: parameters
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Public Function Invoke(instance As Object, ParamArray parameters As Object()) As Object
  overload: MacacaGames.MethodInvoker.Invoke*
  nameWithType.vb: MethodInvoker.Invoke(Object, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.MethodInvoker.Invoke(System.Object, System.Object())
  name.vb: Invoke(Object, Object())
- uid: MacacaGames.MethodInvoker.MacacaGames#IMethodInvoker#Invoke(System.Object,System.Object[])
  commentId: M:MacacaGames.MethodInvoker.MacacaGames#IMethodInvoker#Invoke(System.Object,System.Object[])
  id: MacacaGames#IMethodInvoker#Invoke(System.Object,System.Object[])
  isEii: true
  parent: MacacaGames.MethodInvoker
  langs:
  - csharp
  - vb
  name: IMethodInvoker.Invoke(Object, Object[])
  nameWithType: MethodInvoker.IMethodInvoker.Invoke(Object, Object[])
  fullName: MacacaGames.MethodInvoker.MacacaGames.IMethodInvoker.Invoke(System.Object, System.Object[])
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Reflactor/MethodInvoker.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: MacacaGames.IMethodInvoker.Invoke
    path: ../Scripts/Utilitys/Reflactor/MethodInvoker.cs
    startLine: 85
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: object IMethodInvoker.Invoke(object instance, params object[] parameters)
    parameters:
    - id: instance
      type: System.Object
    - id: parameters
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Function MacacaGames.IMethodInvoker.Invoke(instance As Object, ParamArray parameters As Object()) As Object Implements IMethodInvoker.Invoke
  overload: MacacaGames.MethodInvoker.MacacaGames#IMethodInvoker#Invoke*
  implements:
  - MacacaGames.IMethodInvoker.Invoke(System.Object,System.Object[])
  nameWithType.vb: MethodInvoker.MacacaGames.IMethodInvoker.Invoke(Object, Object())
  fullName.vb: MacacaGames.MethodInvoker.MacacaGames.IMethodInvoker.Invoke(System.Object, System.Object())
  name.vb: MacacaGames.IMethodInvoker.Invoke(Object, Object())
references:
- uid: MacacaGames
  commentId: N:MacacaGames
  name: MacacaGames
  nameWithType: MacacaGames
  fullName: MacacaGames
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MacacaGames.IMethodInvoker
  commentId: T:MacacaGames.IMethodInvoker
  parent: MacacaGames
  name: IMethodInvoker
  nameWithType: IMethodInvoker
  fullName: MacacaGames.IMethodInvoker
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MacacaGames.MethodInvoker.MethodInfo*
  commentId: Overload:MacacaGames.MethodInvoker.MethodInfo
  name: MethodInfo
  nameWithType: MethodInvoker.MethodInfo
  fullName: MacacaGames.MethodInvoker.MethodInfo
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: MacacaGames.MethodInvoker.#ctor*
  commentId: Overload:MacacaGames.MethodInvoker.#ctor
  name: MethodInvoker
  nameWithType: MethodInvoker.MethodInvoker
  fullName: MacacaGames.MethodInvoker.MethodInvoker
- uid: MacacaGames.MethodInvoker.Invoke*
  commentId: Overload:MacacaGames.MethodInvoker.Invoke
  name: Invoke
  nameWithType: MethodInvoker.Invoke
  fullName: MacacaGames.MethodInvoker.Invoke
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: MacacaGames.MethodInvoker.MacacaGames#IMethodInvoker#Invoke*
  commentId: Overload:MacacaGames.MethodInvoker.MacacaGames#IMethodInvoker#Invoke
  name: IMethodInvoker.Invoke
  nameWithType: MethodInvoker.IMethodInvoker.Invoke
  fullName: MacacaGames.MethodInvoker.MacacaGames.IMethodInvoker.Invoke
  nameWithType.vb: MethodInvoker.MacacaGames.IMethodInvoker.Invoke
  name.vb: MacacaGames.IMethodInvoker.Invoke
- uid: MacacaGames.IMethodInvoker.Invoke(System.Object,System.Object[])
  commentId: M:MacacaGames.IMethodInvoker.Invoke(System.Object,System.Object[])
  parent: MacacaGames.IMethodInvoker
  isExternal: true
  name: Invoke(Object, Object[])
  nameWithType: IMethodInvoker.Invoke(Object, Object[])
  fullName: MacacaGames.IMethodInvoker.Invoke(System.Object, System.Object[])
  nameWithType.vb: IMethodInvoker.Invoke(Object, Object())
  fullName.vb: MacacaGames.IMethodInvoker.Invoke(System.Object, System.Object())
  name.vb: Invoke(Object, Object())
  spec.csharp:
  - uid: MacacaGames.IMethodInvoker.Invoke(System.Object,System.Object[])
    name: Invoke
    nameWithType: IMethodInvoker.Invoke
    fullName: MacacaGames.IMethodInvoker.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MacacaGames.IMethodInvoker.Invoke(System.Object,System.Object[])
    name: Invoke
    nameWithType: IMethodInvoker.Invoke
    fullName: MacacaGames.IMethodInvoker.Invoke
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
