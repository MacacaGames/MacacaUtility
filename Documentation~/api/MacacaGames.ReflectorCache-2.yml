### YamlMime:ManagedReference
items:
- uid: MacacaGames.ReflectorCache`2
  commentId: T:MacacaGames.ReflectorCache`2
  id: ReflectorCache`2
  parent: MacacaGames
  children:
  - MacacaGames.ReflectorCache`2.Create(`0)
  - MacacaGames.ReflectorCache`2.Get(`0)
  langs:
  - csharp
  - vb
  name: ReflectorCache<TKey, TValue>
  nameWithType: ReflectorCache<TKey, TValue>
  fullName: MacacaGames.ReflectorCache<TKey, TValue>
  type: Class
  source:
    remote:
      path: Scripts/Utilitys/Reflactor/Cache/ReflactorCache.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: ReflectorCache
    path: ../Scripts/Utilitys/Reflactor/Cache/ReflactorCache.cs
    startLine: 28
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: 'public abstract class ReflectorCache<TKey, TValue> : IReflactorCache<TKey, TValue>'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: >-
      Public MustInherit Class ReflectorCache(Of TKey, TValue)
          Implements IReflactorCache(Of TKey, TValue)
  inheritance:
  - System.Object
  implements:
  - MacacaGames.IReflactorCache{{TKey},{TValue}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ReflectorCache(Of TKey, TValue)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: MacacaGames.ReflectorCache(Of TKey, TValue)
  name.vb: ReflectorCache(Of TKey, TValue)
- uid: MacacaGames.ReflectorCache`2.Get(`0)
  commentId: M:MacacaGames.ReflectorCache`2.Get(`0)
  id: Get(`0)
  parent: MacacaGames.ReflectorCache`2
  langs:
  - csharp
  - vb
  name: Get(TKey)
  nameWithType: ReflectorCache<TKey, TValue>.Get(TKey)
  fullName: MacacaGames.ReflectorCache<TKey, TValue>.Get(TKey)
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Reflactor/Cache/ReflactorCache.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: Get
    path: ../Scripts/Utilitys/Reflactor/Cache/ReflactorCache.cs
    startLine: 33
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public TValue Get(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
    content.vb: Public Function Get(key As TKey) As TValue
  overload: MacacaGames.ReflectorCache`2.Get*
  implements:
  - MacacaGames.IReflactorCache{{TKey},{TValue}}.Get({TKey})
  nameWithType.vb: ReflectorCache(Of TKey, TValue).Get(TKey)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: MacacaGames.ReflectorCache(Of TKey, TValue).Get(TKey)
- uid: MacacaGames.ReflectorCache`2.Create(`0)
  commentId: M:MacacaGames.ReflectorCache`2.Create(`0)
  id: Create(`0)
  parent: MacacaGames.ReflectorCache`2
  langs:
  - csharp
  - vb
  name: Create(TKey)
  nameWithType: ReflectorCache<TKey, TValue>.Create(TKey)
  fullName: MacacaGames.ReflectorCache<TKey, TValue>.Create(TKey)
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Reflactor/Cache/ReflactorCache.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: Create
    path: ../Scripts/Utilitys/Reflactor/Cache/ReflactorCache.cs
    startLine: 60
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: protected abstract TValue Create(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
    content.vb: Protected MustOverride Function Create(key As TKey) As TValue
  overload: MacacaGames.ReflectorCache`2.Create*
  nameWithType.vb: ReflectorCache(Of TKey, TValue).Create(TKey)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: MacacaGames.ReflectorCache(Of TKey, TValue).Create(TKey)
references:
- uid: MacacaGames
  commentId: N:MacacaGames
  name: MacacaGames
  nameWithType: MacacaGames
  fullName: MacacaGames
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: MacacaGames.IReflactorCache{{TKey},{TValue}}
  commentId: T:MacacaGames.IReflactorCache{`0,`1}
  parent: MacacaGames
  definition: MacacaGames.IReflactorCache`2
  name: IReflactorCache<TKey, TValue>
  nameWithType: IReflactorCache<TKey, TValue>
  fullName: MacacaGames.IReflactorCache<TKey, TValue>
  nameWithType.vb: IReflactorCache(Of TKey, TValue)
  fullName.vb: MacacaGames.IReflactorCache(Of TKey, TValue)
  name.vb: IReflactorCache(Of TKey, TValue)
  spec.csharp:
  - uid: MacacaGames.IReflactorCache`2
    name: IReflactorCache
    nameWithType: IReflactorCache
    fullName: MacacaGames.IReflactorCache
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MacacaGames.IReflactorCache`2
    name: IReflactorCache
    nameWithType: IReflactorCache
    fullName: MacacaGames.IReflactorCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MacacaGames.IReflactorCache`2
  commentId: T:MacacaGames.IReflactorCache`2
  name: IReflactorCache<TKey, TValue>
  nameWithType: IReflactorCache<TKey, TValue>
  fullName: MacacaGames.IReflactorCache<TKey, TValue>
  nameWithType.vb: IReflactorCache(Of TKey, TValue)
  fullName.vb: MacacaGames.IReflactorCache(Of TKey, TValue)
  name.vb: IReflactorCache(Of TKey, TValue)
  spec.csharp:
  - uid: MacacaGames.IReflactorCache`2
    name: IReflactorCache
    nameWithType: IReflactorCache
    fullName: MacacaGames.IReflactorCache
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MacacaGames.IReflactorCache`2
    name: IReflactorCache
    nameWithType: IReflactorCache
    fullName: MacacaGames.IReflactorCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: MacacaGames.ReflectorCache`2.Get*
  commentId: Overload:MacacaGames.ReflectorCache`2.Get
  name: Get
  nameWithType: ReflectorCache<TKey, TValue>.Get
  fullName: MacacaGames.ReflectorCache<TKey, TValue>.Get
  nameWithType.vb: ReflectorCache(Of TKey, TValue).Get
  fullName.vb: MacacaGames.ReflectorCache(Of TKey, TValue).Get
- uid: MacacaGames.IReflactorCache{{TKey},{TValue}}.Get({TKey})
  commentId: M:MacacaGames.IReflactorCache{`0,`1}.Get(`0)
  parent: MacacaGames.IReflactorCache{{TKey},{TValue}}
  definition: MacacaGames.IReflactorCache`2.Get(`0)
  name: Get(TKey)
  nameWithType: IReflactorCache<TKey, TValue>.Get(TKey)
  fullName: MacacaGames.IReflactorCache<TKey, TValue>.Get(TKey)
  nameWithType.vb: IReflactorCache(Of TKey, TValue).Get(TKey)
  fullName.vb: MacacaGames.IReflactorCache(Of TKey, TValue).Get(TKey)
  spec.csharp:
  - uid: MacacaGames.IReflactorCache`2.Get(`0)
    name: Get
    nameWithType: IReflactorCache<TKey, TValue>.Get
    fullName: MacacaGames.IReflactorCache<TKey, TValue>.Get
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MacacaGames.IReflactorCache`2.Get(`0)
    name: Get
    nameWithType: IReflactorCache(Of TKey, TValue).Get
    fullName: MacacaGames.IReflactorCache(Of TKey, TValue).Get
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: MacacaGames.IReflactorCache`2.Get(`0)
  commentId: M:MacacaGames.IReflactorCache`2.Get(`0)
  name: Get(TKey)
  nameWithType: IReflactorCache<TKey, TValue>.Get(TKey)
  fullName: MacacaGames.IReflactorCache<TKey, TValue>.Get(TKey)
  nameWithType.vb: IReflactorCache(Of TKey, TValue).Get(TKey)
  fullName.vb: MacacaGames.IReflactorCache(Of TKey, TValue).Get(TKey)
  spec.csharp:
  - uid: MacacaGames.IReflactorCache`2.Get(`0)
    name: Get
    nameWithType: IReflactorCache<TKey, TValue>.Get
    fullName: MacacaGames.IReflactorCache<TKey, TValue>.Get
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: MacacaGames.IReflactorCache`2.Get(`0)
    name: Get
    nameWithType: IReflactorCache(Of TKey, TValue).Get
    fullName: MacacaGames.IReflactorCache(Of TKey, TValue).Get
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: MacacaGames.ReflectorCache`2.Create*
  commentId: Overload:MacacaGames.ReflectorCache`2.Create
  name: Create
  nameWithType: ReflectorCache<TKey, TValue>.Create
  fullName: MacacaGames.ReflectorCache<TKey, TValue>.Create
  nameWithType.vb: ReflectorCache(Of TKey, TValue).Create
  fullName.vb: MacacaGames.ReflectorCache(Of TKey, TValue).Create
