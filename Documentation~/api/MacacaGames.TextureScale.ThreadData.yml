### YamlMime:ManagedReference
items:
- uid: MacacaGames.TextureScale.ThreadData
  commentId: T:MacacaGames.TextureScale.ThreadData
  id: TextureScale.ThreadData
  parent: MacacaGames
  children:
  - MacacaGames.TextureScale.ThreadData.#ctor(System.Int32,System.Int32)
  - MacacaGames.TextureScale.ThreadData.end
  - MacacaGames.TextureScale.ThreadData.start
  langs:
  - csharp
  - vb
  name: TextureScale.ThreadData
  nameWithType: TextureScale.ThreadData
  fullName: MacacaGames.TextureScale.ThreadData
  type: Class
  source:
    remote:
      path: Scripts/Utilitys/TextureAndScreenUtility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: ThreadData
    path: ../Scripts/Utilitys/TextureAndScreenUtility.cs
    startLine: 184
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public class ThreadData
    content.vb: Public Class ThreadData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MacacaGames.TextureScale.ThreadData.start
  commentId: F:MacacaGames.TextureScale.ThreadData.start
  id: start
  parent: MacacaGames.TextureScale.ThreadData
  langs:
  - csharp
  - vb
  name: start
  nameWithType: TextureScale.ThreadData.start
  fullName: MacacaGames.TextureScale.ThreadData.start
  type: Field
  source:
    remote:
      path: Scripts/Utilitys/TextureAndScreenUtility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: start
    path: ../Scripts/Utilitys/TextureAndScreenUtility.cs
    startLine: 186
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public int start
    return:
      type: System.Int32
    content.vb: Public start As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.TextureScale.ThreadData.end
  commentId: F:MacacaGames.TextureScale.ThreadData.end
  id: end
  parent: MacacaGames.TextureScale.ThreadData
  langs:
  - csharp
  - vb
  name: end
  nameWithType: TextureScale.ThreadData.end
  fullName: MacacaGames.TextureScale.ThreadData.end
  type: Field
  source:
    remote:
      path: Scripts/Utilitys/TextureAndScreenUtility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: end
    path: ../Scripts/Utilitys/TextureAndScreenUtility.cs
    startLine: 187
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public int end
    return:
      type: System.Int32
    content.vb: Public end As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: MacacaGames.TextureScale.ThreadData.#ctor(System.Int32,System.Int32)
  commentId: M:MacacaGames.TextureScale.ThreadData.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: MacacaGames.TextureScale.ThreadData
  langs:
  - csharp
  - vb
  name: ThreadData(Int32, Int32)
  nameWithType: TextureScale.ThreadData.ThreadData(Int32, Int32)
  fullName: MacacaGames.TextureScale.ThreadData.ThreadData(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Scripts/Utilitys/TextureAndScreenUtility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: .ctor
    path: ../Scripts/Utilitys/TextureAndScreenUtility.cs
    startLine: 188
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public ThreadData(int s, int e)
    parameters:
    - id: s
      type: System.Int32
    - id: e
      type: System.Int32
    content.vb: Public Sub New(s As Integer, e As Integer)
  overload: MacacaGames.TextureScale.ThreadData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: MacacaGames
  commentId: N:MacacaGames
  name: MacacaGames
  nameWithType: MacacaGames
  fullName: MacacaGames
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: MacacaGames.TextureScale.ThreadData.#ctor*
  commentId: Overload:MacacaGames.TextureScale.ThreadData.#ctor
  name: ThreadData
  nameWithType: TextureScale.ThreadData.ThreadData
  fullName: MacacaGames.TextureScale.ThreadData.ThreadData
