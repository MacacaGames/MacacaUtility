### YamlMime:ManagedReference
items:
- uid: MacacaGames.Utility
  commentId: T:MacacaGames.Utility
  id: Utility
  parent: MacacaGames
  children:
  - MacacaGames.Utility.Base64Decode(System.String)
  - MacacaGames.Utility.Base64Encode(System.String)
  - MacacaGames.Utility.BytesToString(System.Byte[])
  - MacacaGames.Utility.GetDateTimeFromTimeStamp(System.Int32)
  - MacacaGames.Utility.GetTimeStamp
  - MacacaGames.Utility.GetType(System.String)
  - MacacaGames.Utility.StringToBytes(System.String)
  langs:
  - csharp
  - vb
  name: Utility
  nameWithType: Utility
  fullName: MacacaGames.Utility
  type: Class
  source:
    remote:
      path: Scripts/Utilitys/Utility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: Utility
    path: ../Scripts/Utilitys/Utility.cs
    startLine: 9
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public class Utility
    content.vb: Public Class Utility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: MacacaGames.Utility.GetTimeStamp
  commentId: M:MacacaGames.Utility.GetTimeStamp
  id: GetTimeStamp
  parent: MacacaGames.Utility
  langs:
  - csharp
  - vb
  name: GetTimeStamp()
  nameWithType: Utility.GetTimeStamp()
  fullName: MacacaGames.Utility.GetTimeStamp()
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Utility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: GetTimeStamp
    path: ../Scripts/Utilitys/Utility.cs
    startLine: 15
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  summary: "\n取得 1970/01/01 至現在時間的總秒數\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Please consider don't use MacacaGames.Utility.GetTimeStamp() directly, use MacacaGames.GlobalTimer.currentTimeStamp instead, since MacacaGames.GlobalTimer.currentTimeStamp will cache timestamp value every frame.")]

      public static int GetTimeStamp()
    return:
      type: System.Int32
    content.vb: >-
      <Obsolete("Please consider don't use MacacaGames.Utility.GetTimeStamp() directly, use MacacaGames.GlobalTimer.currentTimeStamp instead, since MacacaGames.GlobalTimer.currentTimeStamp will cache timestamp value every frame.")>

      Public Shared Function GetTimeStamp As Integer
  overload: MacacaGames.Utility.GetTimeStamp*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Please consider don't use MacacaGames.Utility.GetTimeStamp() directly, use MacacaGames.GlobalTimer.currentTimeStamp instead, since MacacaGames.GlobalTimer.currentTimeStamp will cache timestamp value every frame.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.Utility.GetDateTimeFromTimeStamp(System.Int32)
  commentId: M:MacacaGames.Utility.GetDateTimeFromTimeStamp(System.Int32)
  id: GetDateTimeFromTimeStamp(System.Int32)
  parent: MacacaGames.Utility
  langs:
  - csharp
  - vb
  name: GetDateTimeFromTimeStamp(Int32)
  nameWithType: Utility.GetDateTimeFromTimeStamp(Int32)
  fullName: MacacaGames.Utility.GetDateTimeFromTimeStamp(System.Int32)
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Utility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: GetDateTimeFromTimeStamp
    path: ../Scripts/Utilitys/Utility.cs
    startLine: 23
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public static DateTime GetDateTimeFromTimeStamp(int timestamp)
    parameters:
    - id: timestamp
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: Public Shared Function GetDateTimeFromTimeStamp(timestamp As Integer) As Date
  overload: MacacaGames.Utility.GetDateTimeFromTimeStamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.Utility.GetType(System.String)
  commentId: M:MacacaGames.Utility.GetType(System.String)
  id: GetType(System.String)
  parent: MacacaGames.Utility
  langs:
  - csharp
  - vb
  name: GetType(String)
  nameWithType: Utility.GetType(String)
  fullName: MacacaGames.Utility.GetType(System.String)
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Utility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: GetType
    path: ../Scripts/Utilitys/Utility.cs
    startLine: 32
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  summary: "\n以 TypeName 尋找對應 Type UnityEngine 專用\n"
  example: []
  syntax:
    content: public static Type GetType(string TypeName)
    parameters:
    - id: TypeName
      type: System.String
    return:
      type: System.Type
    content.vb: Public Shared Function GetType(TypeName As String) As Type
  overload: MacacaGames.Utility.GetType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.Utility.Base64Encode(System.String)
  commentId: M:MacacaGames.Utility.Base64Encode(System.String)
  id: Base64Encode(System.String)
  parent: MacacaGames.Utility
  langs:
  - csharp
  - vb
  name: Base64Encode(String)
  nameWithType: Utility.Base64Encode(String)
  fullName: MacacaGames.Utility.Base64Encode(System.String)
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Utility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: Base64Encode
    path: ../Scripts/Utilitys/Utility.cs
    startLine: 94
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public static string Base64Encode(string source)
    parameters:
    - id: source
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Base64Encode(source As String) As String
  overload: MacacaGames.Utility.Base64Encode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.Utility.Base64Decode(System.String)
  commentId: M:MacacaGames.Utility.Base64Decode(System.String)
  id: Base64Decode(System.String)
  parent: MacacaGames.Utility
  langs:
  - csharp
  - vb
  name: Base64Decode(String)
  nameWithType: Utility.Base64Decode(String)
  fullName: MacacaGames.Utility.Base64Decode(System.String)
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Utility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: Base64Decode
    path: ../Scripts/Utilitys/Utility.cs
    startLine: 100
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public static string Base64Decode(string base64Str)
    parameters:
    - id: base64Str
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Base64Decode(base64Str As String) As String
  overload: MacacaGames.Utility.Base64Decode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MacacaGames.Utility.BytesToString(System.Byte[])
  commentId: M:MacacaGames.Utility.BytesToString(System.Byte[])
  id: BytesToString(System.Byte[])
  parent: MacacaGames.Utility
  langs:
  - csharp
  - vb
  name: BytesToString(Byte[])
  nameWithType: Utility.BytesToString(Byte[])
  fullName: MacacaGames.Utility.BytesToString(System.Byte[])
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Utility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: BytesToString
    path: ../Scripts/Utilitys/Utility.cs
    startLine: 106
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public static string BytesToString(byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
    return:
      type: System.String
    content.vb: Public Shared Function BytesToString(bytes As Byte()) As String
  overload: MacacaGames.Utility.BytesToString*
  nameWithType.vb: Utility.BytesToString(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: MacacaGames.Utility.BytesToString(System.Byte())
  name.vb: BytesToString(Byte())
- uid: MacacaGames.Utility.StringToBytes(System.String)
  commentId: M:MacacaGames.Utility.StringToBytes(System.String)
  id: StringToBytes(System.String)
  parent: MacacaGames.Utility
  langs:
  - csharp
  - vb
  name: StringToBytes(String)
  nameWithType: Utility.StringToBytes(String)
  fullName: MacacaGames.Utility.StringToBytes(System.String)
  type: Method
  source:
    remote:
      path: Scripts/Utilitys/Utility.cs
      branch: master
      repo: https://github.com/MacacaGames/MacacaUtility.git
    id: StringToBytes
    path: ../Scripts/Utilitys/Utility.cs
    startLine: 118
  assemblies:
  - Macaca.Utility
  namespace: MacacaGames
  syntax:
    content: public static byte[] StringToBytes(string source)
    parameters:
    - id: source
      type: System.String
    return:
      type: System.Byte[]
    content.vb: Public Shared Function StringToBytes(source As String) As Byte()
  overload: MacacaGames.Utility.StringToBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MacacaGames
  commentId: N:MacacaGames
  name: MacacaGames
  nameWithType: MacacaGames
  fullName: MacacaGames
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MacacaGames.Utility.GetTimeStamp*
  commentId: Overload:MacacaGames.Utility.GetTimeStamp
  name: GetTimeStamp
  nameWithType: Utility.GetTimeStamp
  fullName: MacacaGames.Utility.GetTimeStamp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: MacacaGames.Utility.GetDateTimeFromTimeStamp*
  commentId: Overload:MacacaGames.Utility.GetDateTimeFromTimeStamp
  name: GetDateTimeFromTimeStamp
  nameWithType: Utility.GetDateTimeFromTimeStamp
  fullName: MacacaGames.Utility.GetDateTimeFromTimeStamp
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: MacacaGames.Utility.GetType*
  commentId: Overload:MacacaGames.Utility.GetType
  name: GetType
  nameWithType: Utility.GetType
  fullName: MacacaGames.Utility.GetType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: MacacaGames.Utility.Base64Encode*
  commentId: Overload:MacacaGames.Utility.Base64Encode
  name: Base64Encode
  nameWithType: Utility.Base64Encode
  fullName: MacacaGames.Utility.Base64Encode
- uid: MacacaGames.Utility.Base64Decode*
  commentId: Overload:MacacaGames.Utility.Base64Decode
  name: Base64Decode
  nameWithType: Utility.Base64Decode
  fullName: MacacaGames.Utility.Base64Decode
- uid: MacacaGames.Utility.BytesToString*
  commentId: Overload:MacacaGames.Utility.BytesToString
  name: BytesToString
  nameWithType: Utility.BytesToString
  fullName: MacacaGames.Utility.BytesToString
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: MacacaGames.Utility.StringToBytes*
  commentId: Overload:MacacaGames.Utility.StringToBytes
  name: StringToBytes
  nameWithType: Utility.StringToBytes
  fullName: MacacaGames.Utility.StringToBytes
